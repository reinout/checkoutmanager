.. :doctest:

Initial import (and setting it all to verbose):

    >>> from checkoutmanager import utils

Very basic testing of utils.py: basically just a command line runner:

    >>> print utils.system('echo "hello"')
    hello

    >>> utils.system('non_existing_command')
    Traceback (most recent call last):
    ...
    CommandError

    >>> try:
    ...     utils.system('non_existing_command')
    ... except utils.CommandError, e:
    ...     print e.format_msg()
    Something went wrong when executing:
        non_existing_command
    while in directory:
        /...checkoutmanager/parts/test...
    Returncode:
        127
    Output:
    ... not found

CommandError needs to be pickleable:

    >>> import pickle

    >>> e1 = utils.CommandError(1, "cmd", "out")
    >>> e2 = pickle.loads(pickle.dumps(e1))
    >>> for attr in ("returncode", "command", "output", "working_dir"):
    ...     print getattr(e1, attr) == getattr(e2, attr)
    True
    True
    True
    True

More verbose output:

    >>> utils.VERBOSE = True
    >>> print utils.system('echo "hello"')
    [...] echo "hello"
    hello

Teardown:

    >>> utils.VERBOSE = False
